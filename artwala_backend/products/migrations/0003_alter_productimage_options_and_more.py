# Generated by Django 5.2.4 on 2025-07-04 10:51

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('artists', '0003_alter_artistprofile_artist_statement_and_more'),
        ('products', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='productimage',
            options={},
        ),
        migrations.AlterUniqueTogether(
            name='cartitem',
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name='productlike',
            unique_together=set(),
        ),
        migrations.AlterField(
            model_name='cart',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='When cart was first created for this user'),
        ),
        migrations.AlterField(
            model_name='cart',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Last time items were added/removed from cart'),
        ),
        migrations.AlterField(
            model_name='cart',
            name='user',
            field=models.ForeignKey(help_text='Owner of this shopping cart', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='cartitem',
            name='added_at',
            field=models.DateTimeField(auto_now_add=True, help_text='When this item was added to the cart'),
        ),
        migrations.AlterField(
            model_name='cartitem',
            name='cart',
            field=models.ForeignKey(help_text='The shopping cart this item belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='products.cart'),
        ),
        migrations.AlterField(
            model_name='cartitem',
            name='product',
            field=models.ForeignKey(help_text='The artwork/product being added to cart', on_delete=django.db.models.deletion.CASCADE, to='products.product'),
        ),
        migrations.AlterField(
            model_name='cartitem',
            name='quantity',
            field=models.PositiveIntegerField(default=1, help_text='Number of this item in cart (usually 1 for unique artworks)'),
        ),
        migrations.AlterField(
            model_name='category',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='When this category was first created'),
        ),
        migrations.AlterField(
            model_name='category',
            name='description',
            field=models.TextField(blank=True, help_text='Detailed description of what this category includes'),
        ),
        migrations.AlterField(
            model_name='category',
            name='image',
            field=models.ImageField(blank=True, help_text='Representative image displayed for this category', null=True, upload_to='category_images/'),
        ),
        migrations.AlterField(
            model_name='category',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Whether this category is visible and usable on the platform'),
        ),
        migrations.AlterField(
            model_name='category',
            name='name',
            field=models.CharField(help_text="Display name of the category (e.g., 'Paintings', 'Sculptures')", max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='category',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='Parent category for creating nested category structures', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='products.category'),
        ),
        migrations.AlterField(
            model_name='category',
            name='slug',
            field=models.SlugField(help_text='URL-friendly version of category name for web addresses', unique=True),
        ),
        migrations.AlterField(
            model_name='order',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='When order was placed by customer'),
        ),
        migrations.AlterField(
            model_name='order',
            name='order_number',
            field=models.CharField(help_text='Unique identifier for tracking and customer service', max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='order',
            name='payment_method',
            field=models.CharField(help_text='How customer paid (credit card, PayPal, etc.)', max_length=50),
        ),
        migrations.AlterField(
            model_name='order',
            name='payment_status',
            field=models.CharField(default='pending', help_text='Payment processing status (pending, completed, failed)', max_length=20),
        ),
        migrations.AlterField(
            model_name='order',
            name='shipping_address',
            field=models.JSONField(help_text="Customer's delivery address stored as structured data"),
        ),
        migrations.AlterField(
            model_name='order',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled')], default='pending', help_text='Current order status for tracking progress', max_length=20),
        ),
        migrations.AlterField(
            model_name='order',
            name='total_amount',
            field=models.DecimalField(decimal_places=2, help_text='Total order value including taxes and shipping', max_digits=10),
        ),
        migrations.AlterField(
            model_name='order',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Last time order status or details were updated'),
        ),
        migrations.AlterField(
            model_name='order',
            name='user',
            field=models.ForeignKey(help_text='Customer who placed this order', on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='orderitem',
            name='order',
            field=models.ForeignKey(help_text='The order this item belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='products.order'),
        ),
        migrations.AlterField(
            model_name='orderitem',
            name='price',
            field=models.DecimalField(decimal_places=2, help_text='Price paid for this item at time of purchase (preserves historical pricing)', max_digits=10),
        ),
        migrations.AlterField(
            model_name='orderitem',
            name='product',
            field=models.ForeignKey(help_text='The artwork/product that was purchased', on_delete=django.db.models.deletion.CASCADE, to='products.product'),
        ),
        migrations.AlterField(
            model_name='orderitem',
            name='quantity',
            field=models.PositiveIntegerField(default=1, help_text='Number of this item purchased (usually 1 for unique artworks)'),
        ),
        migrations.AlterField(
            model_name='product',
            name='artist',
            field=models.ForeignKey(help_text='The artist who created and is selling this artwork', on_delete=django.db.models.deletion.CASCADE, related_name='products', to='artists.artistprofile'),
        ),
        migrations.AlterField(
            model_name='product',
            name='category',
            field=models.ForeignKey(help_text='Primary category this artwork belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='products', to='products.category'),
        ),
        migrations.AlterField(
            model_name='product',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='When this product was first created'),
        ),
        migrations.AlterField(
            model_name='product',
            name='description',
            field=models.TextField(help_text='Detailed description of the artwork, inspiration, and techniques'),
        ),
        migrations.AlterField(
            model_name='product',
            name='dimensions',
            field=models.CharField(blank=True, help_text="Physical size of artwork (e.g., '30x40 inches', '76x102 cm')", max_length=100),
        ),
        migrations.AlterField(
            model_name='product',
            name='featured',
            field=models.BooleanField(default=False, help_text='Whether to highlight this product prominently on the platform'),
        ),
        migrations.AlterField(
            model_name='product',
            name='is_framed',
            field=models.BooleanField(default=False, help_text='Whether the artwork comes with a frame'),
        ),
        migrations.AlterField(
            model_name='product',
            name='is_original',
            field=models.BooleanField(default=True, help_text='Whether this is an original artwork or a reproduction'),
        ),
        migrations.AlterField(
            model_name='product',
            name='likes_count',
            field=models.PositiveIntegerField(default=0, help_text='Number of users who have liked/favorited this artwork'),
        ),
        migrations.AlterField(
            model_name='product',
            name='medium',
            field=models.CharField(blank=True, help_text="Materials and techniques used (e.g., 'Oil on canvas', 'Digital print')", max_length=100),
        ),
        migrations.AlterField(
            model_name='product',
            name='price',
            field=models.DecimalField(decimal_places=2, help_text='Selling price in platform currency', max_digits=10),
        ),
        migrations.AlterField(
            model_name='product',
            name='slug',
            field=models.SlugField(help_text='URL-friendly version of title for product pages', max_length=250),
        ),
        migrations.AlterField(
            model_name='product',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('sold', 'Sold'), ('archived', 'Archived')], default='draft', help_text='Current publication status of the product', max_length=20),
        ),
        migrations.AlterField(
            model_name='product',
            name='tags',
            field=models.JSONField(blank=True, default=list, help_text='Searchable keywords related to the artwork (style, theme, etc.)'),
        ),
        migrations.AlterField(
            model_name='product',
            name='title',
            field=models.CharField(help_text='Name/title of the artwork', max_length=200),
        ),
        migrations.AlterField(
            model_name='product',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Last time product information was modified'),
        ),
        migrations.AlterField(
            model_name='product',
            name='views_count',
            field=models.PositiveIntegerField(default=0, help_text='Number of times this product page has been viewed'),
        ),
        migrations.AlterField(
            model_name='product',
            name='weight',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Weight for shipping calculations (in kg or lbs)', max_digits=8, null=True),
        ),
        migrations.AlterField(
            model_name='product',
            name='year_created',
            field=models.PositiveIntegerField(blank=True, help_text='Year the artwork was completed', null=True),
        ),
        migrations.AlterField(
            model_name='productimage',
            name='alt_text',
            field=models.CharField(blank=True, help_text='Alternative text for accessibility and SEO', max_length=200),
        ),
        migrations.AlterField(
            model_name='productimage',
            name='image',
            field=models.ImageField(help_text='The actual image file stored on server or CDN', upload_to='product_images/'),
        ),
        migrations.AlterField(
            model_name='productimage',
            name='is_primary',
            field=models.BooleanField(default=False, help_text='Whether this is the main image shown in listings'),
        ),
        migrations.AlterField(
            model_name='productimage',
            name='order',
            field=models.PositiveIntegerField(default=0, help_text='Display order for image galleries (lower numbers shown first)'),
        ),
        migrations.AlterField(
            model_name='productimage',
            name='product',
            field=models.ForeignKey(help_text='The product this image belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.product'),
        ),
        migrations.AlterField(
            model_name='productlike',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='When this like was created (for activity tracking)'),
        ),
        migrations.AlterField(
            model_name='productlike',
            name='product',
            field=models.ForeignKey(help_text='Product that was liked', on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='products.product'),
        ),
        migrations.AlterField(
            model_name='productlike',
            name='user',
            field=models.ForeignKey(help_text='User who liked this product', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterModelTable(
            name='cart',
            table=None,
        ),
        migrations.AlterModelTable(
            name='cartitem',
            table=None,
        ),
        migrations.AlterModelTable(
            name='orderitem',
            table=None,
        ),
        migrations.AlterModelTable(
            name='productimage',
            table=None,
        ),
        migrations.AlterModelTable(
            name='productlike',
            table=None,
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='products.product')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'product_reviews',
                'ordering': ['-created_at'],
                'unique_together': {('product', 'reviewer')},
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlisted_by', to='products.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlists', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'wishlists',
                'unique_together': {('user', 'product')},
            },
        ),
    ]
